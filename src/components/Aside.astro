---
// Inspired by the `Aside` component from docs.astro.build
// https://github.com/withastro/starlight/blob/main/packages/starlight/integrations/asides.ts

interface Props {
  variant?: 'note' | 'tip' | 'caution' | 'danger' | 'quote';
  title?: string;
}

const labelByType = {
  note: 'Note',
  tip: 'Tip',
  caution: 'Caution',
  danger: 'Danger',
  quote: '',
};
const { variant = 'quote' } = Astro.props as Props;
const title = Astro.props.title ?? labelByType[variant] ?? '';

const icons: Record<NonNullable<Props['variant']>, string> = {
  note: 'fa-duotone fa-memo',
  tip: 'fa-duotone fa-lightbulb',
  caution: 'fa-duotone fa-diamond-exclamation',
  danger: 'fa-duotone fa-bolt',
  quote: 'fa-duotone fa-comment-quote',
};
const iconClass = icons[variant];
---

<aside class={`content ${variant}`} aria-label={title}>
  <p class='title' aria-hidden='true'>
    <span class='icon'>
      <i class={iconClass}></i>
      {title}
    </span>
  </p>
  <section>
    <slot />
  </section>
</aside>

<style>
  aside {
    --color-base-purple: 269, 79%;
    --color-base-teal: 180, 80%;
    --color-base-red: 351, 100%;
    --color-base-yellow: 41, 100%;

    --aside-color-base: var(--color-base-purple);
    --aside-color-lightness: 54%;
    --aside-accent-color: hsl(
      var(--aside-color-base),
      var(--aside-color-lightness)
    );
    --aside-text-lightness: 20%;
    --aside-text-accent-color: hsl(
      var(--aside-color-base),
      var(--aside-text-lightness)
    );

    border-inline-start: 4px solid var(--aside-accent-color);
    padding: 0.5rem;
    background-color: hsla(
      var(--aside-color-base),
      var(--aside-color-lightness),
      0.1
    );
    /* Indicates the aside boundaries for forced colors users, transparent is changed to a solid color */
    outline: 1px solid transparent;
  }

  .title {
    line-height: 1;
    margin-bottom: 0.5rem;
    font-size: 0.9rem;
    letter-spacing: 0.05em;
    font-weight: bold;
    text-transform: uppercase;
    color: var(--aside-text-accent-color);
  }

  .icon {
    width: 1.8em;
    height: 1.8em;
    vertical-align: middle;
    fill: currentcolor;
  }

  aside :global(a),
  aside :global(a > code:not([class*='language'])) {
    color: var(--aside-text-accent-color);
  }

  aside :global(pre) {
    margin-left: 0;
    margin-right: 0;
  }

  .tip {
    --aside-color-lightness: 42%;
    --aside-color-base: var(--color-base-teal);
  }

  .caution {
    --aside-color-lightness: 59%;
    --aside-color-base: var(--color-base-yellow);
  }

  .danger {
    --aside-color-lightness: 54%;
    --aside-color-base: var(--color-base-red);
  }
</style>
